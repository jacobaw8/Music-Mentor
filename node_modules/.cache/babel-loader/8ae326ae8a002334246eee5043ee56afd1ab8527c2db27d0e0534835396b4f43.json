{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"active\", \"activityState\", \"style\", \"enabled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { Animated, View, Image } from 'react-native';\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport { isSearchBarAvailableForCurrentPlatform, executeNativeBackPress } from './utils';\nvar ENABLE_SCREENS = true;\nexport function enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n} // @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function enableFreeze() {\n  var shouldEnableReactFreeze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n} // noop\n\nexport var NativeScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(NativeScreen, _React$Component);\n  var _super = _createSuper(NativeScreen);\n  function NativeScreen() {\n    _classCallCheck(this, NativeScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        activityState = _this$props.activityState,\n        style = _this$props.style,\n        _this$props$enabled = _this$props.enabled,\n        enabled = _this$props$enabled === void 0 ? ENABLE_SCREENS : _this$props$enabled,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      if (enabled) {\n        if (active !== undefined && activityState === undefined) {\n          activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n        }\n\n        return /*#__PURE__*/React.createElement(View // @ts-expect-error: hidden exists on web, but not in React Native\n        , _extends({\n          hidden: activityState === 0,\n          style: [style, {\n            display: activityState !== 0 ? 'flex' : 'none'\n          }]\n        }, rest));\n      }\n      return /*#__PURE__*/React.createElement(View, rest);\n    }\n  }]);\n  return NativeScreen;\n}(React.Component);\nexport var Screen = Animated.createAnimatedComponent(NativeScreen);\nexport var ScreenContext = /*#__PURE__*/React.createContext(Screen);\nexport var ScreenContainer = View;\nexport var NativeScreenContainer = View;\nexport var NativeScreenNavigationContainer = View;\nexport var ScreenStack = View;\nexport var FullWindowOverlay = View;\nexport var ScreenStackHeaderBackButtonImage = function ScreenStackHeaderBackButtonImage(props) {\n  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Image, _extends({\n    resizeMode: \"center\",\n    fadeDuration: 0\n  }, props)));\n};\nexport var ScreenStackHeaderRightView = function ScreenStackHeaderRightView(props) {\n  return /*#__PURE__*/React.createElement(View, props);\n};\nexport var ScreenStackHeaderLeftView = function ScreenStackHeaderLeftView(props) {\n  return /*#__PURE__*/React.createElement(View, props);\n};\nexport var ScreenStackHeaderCenterView = function ScreenStackHeaderCenterView(props) {\n  return /*#__PURE__*/React.createElement(View, props);\n};\nexport var ScreenStackHeaderSearchBarView = function ScreenStackHeaderSearchBarView(props) {\n  return /*#__PURE__*/React.createElement(View, props);\n};\nexport var ScreenStackHeaderConfig = View; // @ts-expect-error: search bar props have no common props with View\n\nexport var SearchBar = View;\nexport var ScreenStackHeaderSubview = View;\nexport var shouldUseActivityState = true;","map":{"version":3,"names":["React","Animated","View","Image","default","useTransitionProgress","isSearchBarAvailableForCurrentPlatform","executeNativeBackPress","ENABLE_SCREENS","enableScreens","shouldEnableScreens","arguments","length","undefined","screensEnabled","enableFreeze","shouldEnableReactFreeze","NativeScreen","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","render","_this$props","props","active","activityState","style","_this$props$enabled","enabled","rest","_objectWithoutProperties","_excluded","createElement","_extends","hidden","display","Component","Screen","createAnimatedComponent","ScreenContext","createContext","ScreenContainer","NativeScreenContainer","NativeScreenNavigationContainer","ScreenStack","FullWindowOverlay","ScreenStackHeaderBackButtonImage","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["C:\\Users\\Jacob\\Documents\\GitHub\\jacobaw8\\Music-Mentor\\node_modules\\react-native-screens\\lib\\module\\index.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\nexport { default as useTransitionProgress } from './useTransitionProgress';\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// @ts-ignore function stub, freezing logic is located in index.native.tsx\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function enableFreeze(shouldEnableReactFreeze = true): void {\n  // noop\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContext = React.createContext(Screen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const FullWindowOverlay = View;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> = View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>> = View;\n\nexport const shouldUseActivityState = true;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}