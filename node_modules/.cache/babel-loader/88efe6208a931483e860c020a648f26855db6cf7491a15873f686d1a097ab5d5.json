{"ast":null,"code":"import 'expo/build/Expo.fx';\nimport { AppRegistry, Platform } from 'react-native';\nimport withExpoRoot from './withExpoRoot';\nexport default function registerRootComponent(component) {\n  AppRegistry.registerComponent('main', function () {\n    return withExpoRoot(component);\n  });\n  if (Platform.OS === 'web') {\n    var _document$getElementB;\n    var rootTag = (_document$getElementB = document.getElementById('root')) !== null && _document$getElementB !== void 0 ? _document$getElementB : document.getElementById('main');\n    AppRegistry.runApplication('main', {\n      rootTag: rootTag\n    });\n  }\n}","map":{"version":3,"names":["AppRegistry","Platform","withExpoRoot","registerRootComponent","component","registerComponent","OS","_document$getElementB","rootTag","document","getElementById","runApplication"],"sources":["C:\\Users\\Jacob\\Documents\\GitHub\\jacobaw8\\Music-Mentor\\node_modules\\expo\\src\\launch\\registerRootComponent.tsx"],"sourcesContent":["import 'expo/build/Expo.fx';\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\nimport withExpoRoot from './withExpoRoot';\nimport { InitialProps } from './withExpoRoot.types';\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  AppRegistry.registerComponent('main', () => withExpoRoot(component));\n  if (Platform.OS === 'web') {\n    const rootTag = document.getElementById('root') ?? document.getElementById('main');\n    AppRegistry.runApplication('main', { rootTag });\n  }\n}\n"],"mappings":"AAAA,OAAO,oBAAoB;AAE3B,SAASA,WAAW,EAAEC,QAAQ,QAAQ,cAAc;AAEpD,OAAOC,YAAY,MAAM,gBAAgB;AAGzC,eAAc,SAAUC,qBAAqBA,CAC3CC,SAAiC;EAEjCJ,WAAW,CAACK,iBAAiB,CAAC,MAAM,EAAE;IAAA,OAAMH,YAAY,CAACE,SAAS,CAAC;EAAA,EAAC;EACpE,IAAIH,QAAQ,CAACK,EAAE,KAAK,KAAK,EAAE;IAAA,IAAAC,qBAAA;IACzB,IAAMC,OAAO,IAAAD,qBAAA,GAAGE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,cAAAH,qBAAA,cAAAA,qBAAA,GAAIE,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAClFV,WAAW,CAACW,cAAc,CAAC,MAAM,EAAE;MAAEH,OAAO,EAAPA;IAAO,CAAE,CAAC;;AAEnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}