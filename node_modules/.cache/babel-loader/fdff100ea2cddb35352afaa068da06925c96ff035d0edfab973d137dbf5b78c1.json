{"ast":null,"code":"import * as React from 'react';\n/**\r\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\r\n */\nexport default function useKeyedChildListeners() {\n  var _React$useRef = React.useRef(Object.assign(Object.create(null), {\n      getState: {},\n      beforeRemove: {}\n    })),\n    keyedListeners = _React$useRef.current;\n  var addKeyedListener = React.useCallback(function (type, key, listener) {\n    // @ts-expect-error: according to ref stated above you can use `key` to index type\n    keyedListeners[type][key] = listener;\n    return function () {\n      // @ts-expect-error: according to ref stated above you can use `key` to index type\n      keyedListeners[type][key] = undefined;\n    };\n  }, [keyedListeners]);\n  return {\n    keyedListeners: keyedListeners,\n    addKeyedListener: addKeyedListener\n  };\n}","map":{"version":3,"names":["React","useKeyedChildListeners","_React$useRef","useRef","Object","assign","create","getState","beforeRemove","keyedListeners","current","addKeyedListener","useCallback","type","key","listener","undefined"],"sources":["C:\\Users\\Jacob\\Documents\\GitHub\\jacobaw8\\Music-Mentor\\node_modules\\@react-navigation\\core\\src\\useKeyedChildListeners.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\r\n\r\n/**\r\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\r\n */\r\nexport default function useKeyedChildListeners() {\r\n  const { current: keyedListeners } = React.useRef<{\r\n    [K in keyof KeyedListenerMap]: Record<\r\n      string,\r\n      KeyedListenerMap[K] | undefined\r\n    >;\r\n  }>(\r\n    Object.assign(Object.create(null), {\r\n      getState: {},\r\n      beforeRemove: {},\r\n    })\r\n  );\r\n\r\n  const addKeyedListener = React.useCallback(\r\n    <T extends keyof KeyedListenerMap>(\r\n      type: T,\r\n      key: string,\r\n      listener: KeyedListenerMap[T]\r\n    ) => {\r\n      // @ts-expect-error: according to ref stated above you can use `key` to index type\r\n      keyedListeners[type][key] = listener;\r\n\r\n      return () => {\r\n        // @ts-expect-error: according to ref stated above you can use `key` to index type\r\n        keyedListeners[type][key] = undefined;\r\n      };\r\n    },\r\n    [keyedListeners]\r\n  );\r\n\r\n  return {\r\n    keyedListeners,\r\n    addKeyedListener,\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B;AACA;AACA;AACA,eAAe,SAASC,sBAAsBA,CAAA,EAAG;EAC/C,IAAAC,aAAA,GAAoCF,KAAK,CAACG,MAAM,CAM9CC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAAC,IAAI,CAAC,EAAE;MACjCC,QAAQ,EAAE,CAAC,CAAC;MACZC,YAAY,EAAE,CAAC;IACjB,CAAC,CAAC,CACH;IAVgBC,cAAA,GAAAP,aAAA,CAATQ,OAAO;EAYf,IAAMC,gBAAgB,GAAGX,KAAK,CAACY,WAAW,CACxC,UACEC,IAAO,EACPC,GAAW,EACXC,QAA6B,EAC1B;IACH;IACAN,cAAc,CAACI,IAAI,CAAC,CAACC,GAAG,CAAC,GAAGC,QAAQ;IAEpC,OAAO,YAAM;MACX;MACAN,cAAc,CAACI,IAAI,CAAC,CAACC,GAAG,CAAC,GAAGE,SAAS;IACvC,CAAC;EACH,CAAC,EACD,CAACP,cAAc,CAAC,CACjB;EAED,OAAO;IACLA,cAAc,EAAdA,cAAc;IACdE,gBAAA,EAAAA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}