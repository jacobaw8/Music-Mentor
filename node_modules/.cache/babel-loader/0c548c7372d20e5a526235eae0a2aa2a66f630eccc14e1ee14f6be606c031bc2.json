{"ast":null,"code":"import _createClass from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _defineProperty from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport var CodedError = /*#__PURE__*/function (_Error) {\n  _inherits(CodedError, _Error);\n  var _super = _createSuper(CodedError);\n  function CodedError(code, message) {\n    var _this;\n    _classCallCheck(this, CodedError);\n    _this = _super.call(this, message);\n    _defineProperty(_assertThisInitialized(_this), \"code\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"info\", void 0);\n    _this.code = code;\n    return _this;\n  }\n  return _createClass(CodedError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"names":["CodedError","_Error","_inherits","_super","_createSuper","code","message","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","_createClass","_wrapNativeSuper","Error"],"sources":["C:\\Users\\Jacob\\Documents\\GitHub\\jacobaw8\\Music-Mentor\\node_modules\\expo-modules-core\\src\\errors\\CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":";;;;;;;AAAA;;;;;AAKA,WAAaA,UAAW,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAItB,SAAAA,WAAYK,IAAY,EAAEC,OAAe;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,UAAA;IACvCO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMH,OAAO;IAAEI,eAAA,CAAAC,sBAAA,CAAAJ,KAAA;IAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA;IACfA,KAAA,CAAKF,IAAI,GAAGA,IAAI;IAAC,OAAAE,KAAA;EACnB;EAAC,OAAAK,YAAA,CAAAZ,UAAA;AAAA,gBAAAa,gBAAA,CAP6BC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}