{"ast":null,"code":"import _objectSpread from \"C:/Users/Jacob/Documents/GitHub/jacobaw8/Music-Mentor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var attachRecoveredProps = function attachRecoveredProps(props) {\n  try {\n    // Optionally import expo-error-recovery\n    var _require = require('expo-error-recovery'),\n      recoveredProps = _require.recoveredProps;\n    return _objectSpread(_objectSpread({}, props), {}, {\n      exp: _objectSpread(_objectSpread({}, props.exp), {}, {\n        errorRecovery: recoveredProps\n      })\n    });\n  } catch (_unused) {}\n  return props;\n};","map":{"version":3,"names":["attachRecoveredProps","props","_require","require","recoveredProps","_objectSpread","exp","errorRecovery","_unused"],"sources":["C:\\Users\\Jacob\\Documents\\GitHub\\jacobaw8\\Music-Mentor\\node_modules\\expo\\src\\launch\\RecoveryProps.ts"],"sourcesContent":["import { InitialProps } from './withExpoRoot.types';\n\nexport const attachRecoveredProps = <P extends InitialProps>(props: P): P => {\n  try {\n    // Optionally import expo-error-recovery\n    const { recoveredProps } = require('expo-error-recovery');\n    return {\n      ...props,\n      exp: { ...props.exp, errorRecovery: recoveredProps },\n    };\n  } catch {}\n\n  return props;\n};\n"],"mappings":";AAEA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAA4BC,KAAQ,EAAO;EAC1E,IAAI;IACF;IACA,IAAAC,QAAA,GAA2BC,OAAO,CAAC,qBAAqB,CAAC;MAAjDC,cAAc,GAAAF,QAAA,CAAdE,cAAc;IACtB,OAAAC,aAAA,CAAAA,aAAA,KACKJ,KAAK;MACRK,GAAG,EAAAD,aAAA,CAAAA,aAAA,KAAOJ,KAAK,CAACK,GAAG;QAAEC,aAAa,EAAEH;MAAc;IAAE;GAEvD,CAAC,OAAAI,OAAA,EAAM;EAER,OAAOP,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}